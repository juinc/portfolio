{
  "settings-light-mode": "Light Mode",
  "settings-dark-mode": "Dark Mode",

  "scroll-bar-home": "HOME",
  "scroll-bar-ab-me": "ABOUT ME",
  "scroll-bar-projects": "PROJECTS",
  "scroll-bar-socials": "SOCIALS",

  "global-socials-title": "SOCIALS",

  "info-box-greeting": "hello, I'm",
  "info-box-role": "the multipurposed programmer",
  "info-box-age": "17 years old",
  "info-box-location": "currently I live in Romania",
  "info-box-exp": "half a decade of experience",
  "info-box-goal": "my focus is on versatility, I will get any task done regardless of technology",
  "info-box-specialization": "my specialization is C++ and lua",

  "info-box-socials-button": "GET IN TOUCH",
  "info-box-cv-button": "DOWNLOAD CV",
  "info-box-projects-button": "VIEW PROJECTS",

  "cv-modal-title": "DOWNLOAD CV",
  "cv-modal-subtitle": "Select the language you want to download the CV in:",
  "cv-modal-footer": "Hope to hear from you soon!",

  "section-1-scroll-down": "SCROLL DOWN",

  "about-me-title": "ABOUT ME",
  "about-me-description-top": "I started writing code at 12, through Roblox games, then I moved up to C++ and C++ graphics, exploring C# and more (e.g Arduino) before finally delving into Frontend Web Development and simple backend (a Python Discord bot).",
  "about-me-description-bottom": "This journey wasn't easy and is far from over, but my experience has taught me that I can guarantee I will get a project from idea to completion even if it's ambitious or I don't know the technology, as I can learn it quickly. I will get a project done and I will get it done well.",

  "section-2-lang-title": "LANGUAGES I KNOW",
  "section-2-eng-lang": "English - Close to C2, almost native level",
  "section-2-ro-lang": "Romanian - My native language",
  "section-2-es-lang": "Spanish - Decent, born + spent 8 years here",

  "tech-title": "TECHNOLOGIES",
  "tech-cpp-desc": "I have used C++ in my Omni Bank Manager project and have attempted to build multiple graphical engines with it.",
  "tech-lua-desc": "Lua/Luau was my starting point, and since I have become very advanced and versed into the depths of the language.",
  "tech-web-desc": "I have built two landing pages (unlisted in this portfolio) using vanilla frontend development.",
  "tech-py-desc": "I have used Python to build a 20k+ LOC Discord Bot using Discord.py, listed in my projects section.",
  "tech-vue-desc": "This portfolio was my first project using both Vue and Tailwindcss, frameworks I will continue to use from now on.",
  "tech-flutter-desc": "I am in the process of learning Flutter, which I will implement in competitions (specially) and my personal projects.",

  "projects-section-title": "PROJECTS",
  "projects-card-view-more": "View More",

  "project-1-title": "INKED KNIGHT MISTERY",
  "project-1-card-desc": "IKM is a Roblox game, developed solo by me over 3-4 months. It is about 80% complete, and will be completed before the end of the year.",
  "project-1-modal-desc": "IKM is a solo Roblox game I have been working on for 3-4 months fully solo. It is based around the idea of MM2, Mafia (actor game), Flicker and Among Us, and though unreleased, it is extremely close to completion and will be completed before the end of the year.\n\nThis project represents my most ambitious project so far, as almost everything was developed and implemented fully by myself, in a full-stack manner, including but not limited to: UI Design, Programming, 3D Modelling, Animation, Marketing, Logos and more. Most of it was developed over the span of a single summer.\n\nThe game itself is split in two parts:\n• The lobby place (has shop code, inventory, skin unlocking, battlepass progress etc.)\n• The match place (has the actual match logic, losing, winning, combat system etc.)\nThe lobby and match share critical systems, for example the skin loading, the 5 minute shop (you can purchase items whether in the actual match or in the lobby), the combat system (so you can test skins in the lobby) and more.\n\nThe gameplay loop is based around mystery-solving mechanics combined with social deduction gameplay. Throughout the game's development process I implemented multiple features such as:\n• A shop that resets every 5 minutes and is synced across servers.\n• Skins and skin unlocking + Battlepass system.\n• Custom inventory system, custom loading screen, custom leaderboard / player list and more.\n• Player global leaderboards and stats tracking.\n• Combat system (Blocking, Stamina, Attacking, Crouching).\n• A full match handler (Tasks, Player Management, Identity handling, Voting system, Hint system, Body hiding and more).\n• Heavy game optimization, incorporating techniques such as: Serialization, Smart system design (to avoid futile replication), Data oriented design and more.\n• Boosts for playing with friends, full economy system, Robux and Coin purchase options for any product.\n• Custom hierarchy for the code, splitting it into \"Handlers\" to avoid the use of a framework, while still keeping the code as modular as possible.\n• Opted to use signals to communicate between systems over direct function calling, to avoid circular dependencies.\n• Planned development for support on all platforms (including VR).\netc.\n\nMain technologies used:\n• Fusion (UI Library, have also used React in the past for other projects but I have dropped it)\n• Signal\n• Lyra\n• Janitor\n• Promise\n• Rojo (I used Visual Studio Code as my IDE for this project, as I find it more versatile than the roblox script editor)\n\nChallenges:\n    • I implemented a server-time based check to guarantee that all servers select the same items for the shop.\n    • Balanced performance by carefully limiting replication and structuring data for efficient server-client communication.\n    • Designed a modular codebase to support future expansion without relying on heavy frameworks.\n\nIKM taught me how to handle the end-to-end lifecycle of a multiplayer game, from system design to optimization and testing. It pushed me to solve complex synchronization problems and design scalable architecture, while also building transferable skills in UI design, gameplay system engineering, and economy balancing.\n\nSmall thank you to the testers for the feedback and help they provided in refining the game.",

  "project-2-title": "HOOTY DISCORD BOT",
  "project-2-card-desc": "The Hooty bot is a ~20k LOC Discord bot writting in Python, using Discord.py. It was created as a replacement for most of the big bots I used in my server.",
  "project-2-modal-desc": "The Hooty bot is meant to be deployed once and only kept in one server, I didn't design with multiple server support in mind. It hast most of the features that bots like MEE6, Dyno, Card-bot and more have. It is meant to be deployed through Docker, and I currently host two instances of it, one for the Realm Roundtable server I own (The Owl House fan server, where the bot launched too) and the other for the IKM game server. I used Visual Studio Code as my primary code editor to develop this bot.\n\n    Most important features:\n    • Custom Leveling System – XP tracking and progression tailored for server engagement.\n    • Moderation Tools – warnings, mod logs, kicks, bans, mutes, with persistent records.\n    • Reaction Roles – flexible role assignment with emoji-based triggers.\n    • Economy System – in-server currency with rewards and purchases.\n    • Booster Role Rewards – perks for supporting the community.\n    • Giveaways & Events – automated giveaway management.\n    • Bump Reminders – ensures visibility for server growth.\n    etc.\n\n    For a full list of features check the Github repo.\n\n    Challenges:\n    • Designed a modular command handler to keep the project maintainable as it grew.\n    • Implemented structured logging and error handling to ensure uptime.\n    • Managed async tasks and Discord API rate limits effectively.\n    • Learned containerization through Docker and automated deployments via Proxmox.\n\n    What I learned:\n    • Practical experience with Python project structuring in a large codebase.\n    • Improved proficiency in discord.py and async programming.\n    • Containerization and deployment using Docker.\n    • Server administration with Ubuntu + Proxmox.\n    • General DevOps practices for running multiple live instances.\n\n    Overall the Hooty bot was a project that helped me develop my skills in Python, and increasing my experience with server management, security and overall the best practices when it comes to developing DevOps applications.",

  "project-3-title": "OMNI BANK DATABASE MANAGER",
  "project-3-card-desc": "The Omni Bank DB Manager is a C++ Desktop Application, developed in TheCherno's Walnut framework. The databases are stored in a local txt file, and there's also a CMD only mode.",
  "project-3-modal-desc": "The Omni Bank DB Manager is a C++ project originally assigned by my school as a simple command-line application. I expanded it significantly beyond the requirements by adding:\n      • A full graphical interface using Dear ImGui and TheCherno’s Walnut framework.\n      • Multi-language support (English and Romanian).\n      • A dual-mode system: GUI by default, with a command-line fallback via the -noui argument.\n\n       The project is explained in great depth on the Github Repository, both in English and Romanian. The database is stored in a simple .txt file, locally, and is read / written to everytime the project loads up, gets saved or closes. I used Visual Studio 2022 as an IDE.\n      Most important features:\n      • UI And CMD interface modes\n      • Multiple language support (English + Romanian)\n      • Automatic saving and reading from and to the database\n      • Multiple database support\n\n       What I Learned:\n        • Effective use of ImGui for real-world application UI.\n        • Applying the Walnut framework to streamline C++ development.\n        • Implementing multi-language support in a C++ application.\n        • Designing and delivering a complete, user-facing C++ software project.\n\n        Challenges:\n        • I worked with more complex STL features such as smart pointers to avoid memory leaks\n        • Implemented multi-language support by designing a flexible text resource system that could easily be extended.\n        • Ensured data consistency when reading/writing to .txt files, handling edge cases like unexpected shutdowns or malformed data.\n        • Balanced dual-mode operation (GUI and CLI) without duplicating logic, by abstracting core functionality away from the interface layer.\n        • Learned to integrate and adapt Walnut + ImGui in a non-game project, overcoming gaps in documentation and applying game dev techniques to desktop software.\n\n        This project was a nice stepping stone in my C++ journey: it showed me how to go beyond assignment requirements, balance usability with performance, and make deliberate technology choices. While I opted for ImGui + Walnut here, I am open to and capable of learning frameworks like Qt in future projects.",

  "project-4-title": "THIS PORTFOLIO",
  "project-4-card-desc": "This exact portfolio is my first Vue.js and TailwindCSS project, and it was developed in roughly one week.",
  "project-4-modal-desc": "Vue.js is my favorite web development framework due to its simplicity, performance, and developer experience (Doesn't mean I can't learn others, but this is my personal top start). I learnt Vue.js and Tailwind CSS in under a week, working on this exact project. Given the time constraint I wasn't able to watch any course on either of them and I had to dive on a hands-on approach with no experience with the frameworks.\n\n    Before this portfolio, I built two static pages made in vanilla CSS, JS and HTML, using only swiper.js as a library for sliders.\n• A landing page for a The Owl House fan project, where I'm co-creator in (currently unreleased).\n• A professional portfolio site for an electrician (also private at the client’s request).\nAlthough unreleased, these projects pushed me to quickly become versed in vanilla frontend development, and they were the stepping stones that brought me to learn Vue and Tailwind.\n\nI built this portfolio to promote myself and for the 2025 Hackathon in my city, and the IDE of choice I used to work on it with was WebStorm, as it's my preferred choice but I have also used Visual Studio Code for a short while when I was developing the static sites I mentioned earlier.\n\nFeatures:\n• Multi-language support, implemented through i18n, without duplicating site versions\n• Light/dark mode theme switcher for accessibility and preference\n• Custom icon system with dynamic color and effect handling (SVG + CSS workarounds)\n• Performance optimizations for sites with heavy visual effects\n\nChallenges & Solutions:\n• Integrated complex third-party code (vue.bits effects) into a custom project.\n• Overcame accessibility hurdles by providing language toggles and theme switching.\n• Learned to optimize heavy animations so the site runs smoothly across devices.\n\nWhat I Learned:\n• Rapid adoption of Vue.js and Tailwind CSS for production-ready web development.\n• Building scalable, accessible, and responsive landing pages.\n• Applying self-teaching strategies effectively under time pressure.\n• Incorporating AI as a supporting tool for clarifying concepts and accelerating implementation.\n\nThis project was an essential stepping stone in my web development career, being the first but most definitely not last interaction with frameworks and libraries to deliver full-featured apps. I personally fell more in love with Vue and will be using it for most projects moving on forwards.",

  "project-modal-socials": "Links & Socials",

  "section-4-education-title": "EDUCATION",
  "section-4-education-text": "High School (Final Year) – Math & Computer Science focus. \n Aspiring Computer Science undergraduate (English-taught program) \n \n Independent learning (Udemy courses):",
  "section-4-education-l1": "Learn C++ by Abdul Bari",
  "section-4-education-l2": "DSA in C++ by Abdul Bari",
  "section-4-education-l3": "Flutter & Dart by Maximilian Schwarzmüller",

  "section-4-dp-title": "DIPLOMAS",

  "section-4-dp-1-title": "Informatics Olympiad",
  "section-4-dp-1-desc": "I have participated in the programming olympiad for my county (9th, 10th and 11th grade) and scored in the top 10 overall for my class level in 10th grade.","section-4-dp-2-title": "ITEC",
  "section-4-dp-2-desc": "I have participated in the ITEC programming competition during 9th grade, for the DSA section.","section-4-dp-3-title": "Nextlab",
  "section-4-dp-3-desc": "I have participated in the first stage of the neXtlab robotics competition and won a robotics kit through it.",
  "section-4-dp-4-title": "CPPI",
  "section-4-dp-4-desc": "I was a student for the Center of performance in informatics within my city for 2 years, where we did a deep dive in DSA.",
  "section-4-dp-5-title": "InfoCNFB",
  "section-4-dp-5-desc": "I participated in the InfoCNFB competitions, 3 years in a row, hosted by the most prestigious college in my city and got 4th place the first year."

}